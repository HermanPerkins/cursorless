"use strict";(self.webpackChunkwebsite=self.webpackChunkwebsite||[]).push([[82284],{3905:function(e,t,n){n.d(t,{Zo:function(){return c},kt:function(){return g}});var r=n(67294);function a(e,t,n){return t in e?Object.defineProperty(e,t,{value:n,enumerable:!0,configurable:!0,writable:!0}):e[t]=n,e}function o(e,t){var n=Object.keys(e);if(Object.getOwnPropertySymbols){var r=Object.getOwnPropertySymbols(e);t&&(r=r.filter((function(t){return Object.getOwnPropertyDescriptor(e,t).enumerable}))),n.push.apply(n,r)}return n}function i(e){for(var t=1;t<arguments.length;t++){var n=null!=arguments[t]?arguments[t]:{};t%2?o(Object(n),!0).forEach((function(t){a(e,t,n[t])})):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(n)):o(Object(n)).forEach((function(t){Object.defineProperty(e,t,Object.getOwnPropertyDescriptor(n,t))}))}return e}function s(e,t){if(null==e)return{};var n,r,a=function(e,t){if(null==e)return{};var n,r,a={},o=Object.keys(e);for(r=0;r<o.length;r++)n=o[r],t.indexOf(n)>=0||(a[n]=e[n]);return a}(e,t);if(Object.getOwnPropertySymbols){var o=Object.getOwnPropertySymbols(e);for(r=0;r<o.length;r++)n=o[r],t.indexOf(n)>=0||Object.prototype.propertyIsEnumerable.call(e,n)&&(a[n]=e[n])}return a}var l=r.createContext({}),u=function(e){var t=r.useContext(l),n=t;return e&&(n="function"==typeof e?e(t):i(i({},t),e)),n},c=function(e){var t=u(e.components);return r.createElement(l.Provider,{value:t},e.children)},d={inlineCode:"code",wrapper:function(e){var t=e.children;return r.createElement(r.Fragment,{},t)}},p=r.forwardRef((function(e,t){var n=e.components,a=e.mdxType,o=e.originalType,l=e.parentName,c=s(e,["components","mdxType","originalType","parentName"]),p=u(n),g=a,m=p["".concat(l,".").concat(g)]||p[g]||d[g]||o;return n?r.createElement(m,i(i({ref:t},c),{},{components:n})):r.createElement(m,i({ref:t},c))}));function g(e,t){var n=arguments,a=t&&t.mdxType;if("string"==typeof e||a){var o=n.length,i=new Array(o);i[0]=p;var s={};for(var l in t)hasOwnProperty.call(t,l)&&(s[l]=t[l]);s.originalType=e,s.mdxType="string"==typeof e?e:a,i[1]=s;for(var u=2;u<o;u++)i[u]=n[u];return r.createElement.apply(null,i)}return r.createElement.apply(null,n)}p.displayName="MDXCreateElement"},82607:function(e,t,n){n.r(t),n.d(t,{assets:function(){return c},contentTitle:function(){return l},default:function(){return g},frontMatter:function(){return s},metadata:function(){return u},toc:function(){return d}});var r=n(87462),a=n(63366),o=(n(67294),n(3905)),i=["components"],s={},l="Contributing",u={unversionedId:"contributing/CONTRIBUTING",id:"contributing/CONTRIBUTING",title:"Contributing",description:"Welcome! So glad you've decided to help make Cursorless better. Once you've",source:"@site/../docs/contributing/CONTRIBUTING.md",sourceDirName:"contributing",slug:"/contributing/",permalink:"/docs/contributing/",editUrl:"https://github.com/cursorless-dev/cursorless/edit/main/docs/../docs/contributing/CONTRIBUTING.md",tags:[],version:"current",frontMatter:{},sidebar:"contributing",next:{title:"Adding a new programming language",permalink:"/docs/contributing/adding-a-new-language"}},c={},d=[{value:"Installation",id:"installation",level:3},{value:"Running / testing extension locally",id:"running--testing-extension-locally",level:3},{value:"Code formatting",id:"code-formatting",level:3},{value:"Running docs site locally",id:"running-docs-site-locally",level:3},{value:"Adding tests",id:"adding-tests",level:3},{value:"Adding a new programming language",id:"adding-a-new-programming-language",level:3},{value:"Adding syntactic scope types to an existing language",id:"adding-syntactic-scope-types-to-an-existing-language",level:3},{value:"Changing SVGs",id:"changing-svgs",level:3},{value:"SVG preprocessing script",id:"svg-preprocessing-script",level:4},{value:"Adding hat adjustments at finish",id:"adding-hat-adjustments-at-finish",level:4}],p={toc:d};function g(e){var t=e.components,n=(0,a.Z)(e,i);return(0,o.kt)("wrapper",(0,r.Z)({},p,n,{components:t,mdxType:"MDXLayout"}),(0,o.kt)("h1",{id:"contributing"},"Contributing"),(0,o.kt)("p",null,"Welcome! So glad you've decided to help make Cursorless better. Once you've\nlearned how to ",(0,o.kt)("a",{parentName:"p",href:"#installation"},"install")," and ",(0,o.kt)("a",{parentName:"p",href:"#running--testing-extension-locally"},"run / test a local copy of the\nextension"),", you may want to check out the\n",(0,o.kt)("a",{parentName:"p",href:"api"},"API docs")," to learn more about how Cursorless works."),(0,o.kt)("h3",{id:"installation"},"Installation"),(0,o.kt)("ol",null,(0,o.kt)("li",{parentName:"ol"},"Clone ",(0,o.kt)("a",{parentName:"li",href:"https://github.com/cursorless-dev/cursorless"},(0,o.kt)("inlineCode",{parentName:"a"},"cursorless"))),(0,o.kt)("li",{parentName:"ol"},"From the newly created ",(0,o.kt)("a",{parentName:"li",href:"https://github.com/cursorless-dev/cursorless"},(0,o.kt)("inlineCode",{parentName:"a"},"cursorless"))," directory, run",(0,o.kt)("pre",{parentName:"li"},(0,o.kt)("code",{parentName:"pre",className:"language-sh"},"yarn\n")))),(0,o.kt)("h3",{id:"running--testing-extension-locally"},"Running / testing extension locally"),(0,o.kt)("p",null,"In order to test out your local version of the extension or to run unit tests\nlocally you need to run the extension in debug mode. To do so you need to run\nthe ",(0,o.kt)("inlineCode",{parentName:"p"},"workbench.action.debug.selectandstart"),' command and then select either "Run\nExtension" or "Extension Tests".'),(0,o.kt)("h3",{id:"code-formatting"},"Code formatting"),(0,o.kt)("p",null,"We use ",(0,o.kt)("a",{parentName:"p",href:"https://pre-commit.com/"},(0,o.kt)("inlineCode",{parentName:"a"},"pre-commit"))," to automate autoformatting.\nAutoformatters will automatically run on PRs in CI, but you can also run them\nlocally or install pre-commit hooks as described in the ",(0,o.kt)("inlineCode",{parentName:"p"},"pre-commit"),"\ndocumentation."),(0,o.kt)("h3",{id:"running-docs-site-locally"},"Running docs site locally"),(0,o.kt)("p",null,"Run the ",(0,o.kt)("inlineCode",{parentName:"p"},"workbench.action.debug.selectandstart"),' command and then select\n"Docusaurus Start (Debug)".'),(0,o.kt)("h3",{id:"adding-tests"},"Adding tests"),(0,o.kt)("p",null,"See ",(0,o.kt)("a",{parentName:"p",href:"/docs/contributing/test-case-recorder"},"test-case-recorder.md"),"."),(0,o.kt)("h3",{id:"adding-a-new-programming-language"},"Adding a new programming language"),(0,o.kt)("p",null,"See ",(0,o.kt)("a",{parentName:"p",href:"/docs/contributing/adding-a-new-language"},"docs"),"."),(0,o.kt)("h3",{id:"adding-syntactic-scope-types-to-an-existing-language"},"Adding syntactic scope types to an existing language"),(0,o.kt)("p",null,"See ",(0,o.kt)("a",{parentName:"p",href:"/docs/contributing/parse-tree-patterns"},"parse-tree-patterns.md"),"."),(0,o.kt)("h3",{id:"changing-svgs"},"Changing SVGs"),(0,o.kt)("h4",{id:"svg-preprocessing-script"},"SVG preprocessing script"),(0,o.kt)("p",null,"You'll probably want to run the following to make sure the SVGs have everything they need:"),(0,o.kt)("pre",null,(0,o.kt)("code",{parentName:"pre",className:"language-sh"},"yarn run compile && node ./out/scripts/preprocessSvgHats.js\n")),(0,o.kt)("p",null,"This script will add dummy width, height and fill attributes as necessary to appease the regex in ",(0,o.kt)("inlineCode",{parentName:"p"},"Decorations.ts")),(0,o.kt)("h4",{id:"adding-hat-adjustments-at-finish"},"Adding hat adjustments at finish"),(0,o.kt)("p",null,"While tweaking, the easiest approach is probably to use the\n",(0,o.kt)("inlineCode",{parentName:"p"},"cursorless.individualHatAdjustments")," setting in your settings.json to change\nsize / alignment so you don't need to refresh every time. Once you're done, you\ncan paste the settings into ",(0,o.kt)("inlineCode",{parentName:"p"},"scripts/hatAdjustments/add.ts")," and run the following to get\nyour updates:"),(0,o.kt)("pre",null,(0,o.kt)("code",{parentName:"pre",className:"language-sh"},"yarn run compile && node ./out/scripts/hatAdjustments/add.js\n")),(0,o.kt)("p",null,"If instead, you want to average your adjustments with those in main and see the differences to get to yours and main, you can paste the settings into ",(0,o.kt)("inlineCode",{parentName:"p"},"scripts/hatAdjustments/average.ts")," and run:"),(0,o.kt)("pre",null,(0,o.kt)("code",{parentName:"pre",className:"language-sh"},"yarn run compile && node ./out/scripts/hatAdjustments/average.js\n")))}g.isMDXComponent=!0}}]);